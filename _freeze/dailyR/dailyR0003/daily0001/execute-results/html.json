{
  "hash": "49de0c6947770f326a0596cd432d75ab",
  "result": {
    "markdown": "---\ntitle: \"R4DS Chapter 2 Exercises\"\ndate: '2022-10-15'\noutput: html_document\n---\n\n\n## 2.2.4 Exercises\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6          ✔ purrr   0.3.5     \n✔ tibble  3.1.8          ✔ dplyr   1.0.10    \n✔ tidyr   1.2.1          ✔ stringr 1.4.1.9000\n✔ readr   2.1.3          ✔ forcats 0.5.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n1. Run ggplot(data = mpg). What do you see?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg)\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n>  This creates the background of the plot, but since no layers were specified with geom function, nothing is drawn.\n\nI see empty.\n\n2. How many rows are in mpg? How many columns?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 234\n```\n:::\n:::\n\n\nThere are 234 rows.\n\nWe can also use `glimpes()` to find number of rows:\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n```\n:::\n:::\n\n\n\n3. What does the drv variable describe? Read the help for ?mpg to find out.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?mpg\n```\n:::\n\n\n\n> dv means: \"the type of drive train, where f = front-wheel drive, r = rear wheel drive, 4 = 4wd\"\n\n\n4. Make a scatterplot of hwy vs cyl.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg)+\ngeom_point(aes(hwy,cyl))\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n5. What happens if you make a scatterplot of class vs drv? Why is the plot not useful?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg)+\ngeom_point(aes(class,drv))\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n> A scatter plot is not a useful display of these variables since both `drv` and `class` are categorical variables. A scatterplots work best for plotting a continuous x and a continuous y variable, and when all (x, y) values are unique.\n\nHowever, there are other methods for plotting categorical variables: geom_count() and geom_tile()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = class, y = drv)) +\n  geom_count()\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>%\n  count(class, drv) %>%\n  ggplot(aes(x = class, y = drv)) +\n    geom_tile(mapping = aes(fill = n))\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n> In the previous plot, there are many missing tiles. These missing tiles represent unobserved combinations of class and drv values.  These missing values are not unknown, but represent values of (class, drv) where n = 0. The complete() function in the tidyr package adds new rows to a data frame for missing combinations of columns. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>%\n  count(class, drv) %>%\n  complete(class, drv, fill = list(n = 0)) %>%\n  ggplot(aes(x = class, y = drv)) +\n    geom_tile(mapping = aes(fill = n))\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## 2.3.1 Exercises\n\n1. What’s gone wrong with this code? Why are the points not blue?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy, color = \"blue\"))\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n> The argument colour = \"blue\" is included within the mapping argument, and as such, it is treated as an aesthetic, which is a mapping between a variable and a value\n\nBelow is the correct format:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy), color = \"blue\")\n```\n\n::: {.cell-output-display}\n![](daily0001_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nand it is blow.\n\n<style>\nbody {\ntext-align: justify}\n</style>\n",
    "supporting": [
      "daily0001_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}